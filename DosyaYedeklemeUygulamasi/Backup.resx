<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1nZABtZ2QAbWdkCG1n
        ZBVtZ2QebWdkHm1nZBZtZ2QJbWdkAG1nZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWdkAG1nZAFtZ2QZbWdkUW1n
        ZI1tZ2S4bWdk0G1nZNptZ2TabWdk0G1nZLhtZ2SNbWdkUW1nZBltZ2QBbWdkAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWdkAG9pagBtZ2QhbWdkfm1n
        ZNRtZ2T6bWdk/21nZP9tZ2T/bWdk/21nZP9tZ2T/bWdk/21nZP9tZ2T6bWdk1G1nZH5tZ2QgbWhlAG1n
        ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1nZABtZ2QHbWdkXm1n
        ZNVtZ2T+bWdk/21nZP9tZ2T/bGZj/2xmY/9sZmP/bGZj/2xmY/9sZmP/bGZj/21nZP9tZ2T/bWdk/m1n
        ZNVtZ2RebWdkB21nZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1nZABtZ2QAbWdkEG1n
        ZI1tZ2T1bWdk/21nZP9tZ2T/bWdk/21nZP93cm//e3Zz/3x3dP98d3T/fHd0/3t2c/95dHH/bmhl/21n
        ZP9tZ2T/bWdk/21nZPVtZ2SObWdkEW1nZABsZmMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWdkAG1n
        ZBBtZ2SdbWdk/W1nZP9tZ2T/bWdk/21nZP9tZ2T/bmhl/6ilo//a2Nj/y8rJ/8PBwP/HxcT/29rZ/7q3
        tv92cG3/bGZj/21nZP9tZ2T/bWdk/21nZP1tZ2SebWdkEW1nZAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1n
        ZABtZ2QHbWdkjW1nZP1sZmP/bGZj/2xmY/9sZmP/bGZj/2xmY/9sZmP/cWxp/8K/vv+QjIn/cWxp/314
        dv/Jx8b/fXh2/2xmY/9sZmP/bGZj/2xmY/9sZmP/bGZj/2xmY/1tZ2SObWdkB21nZAAAAAAAAAAAAAAA
        AABtZ2QAbWdkAG1nZF5tZ2T1bWdk/3Vwbf97dnP/e3Zz/3t2c/97dnP/e3Zz/3t2c/98dnT/xcLB/5aR
        kP95c3H/hH99/8zKyf+GgX//enVy/3t2c/97dnP/e3Zz/3t2c/97dnP/eHNw/25oZfVtZ2RebWdkAG1n
        ZAAAAAAAAAAAAG1nZABtZ2QhbWdk1GxmY/+GgX7/ycfG/8rIx//IxsT/xsTD/8bEw//GxMP/xsTD/8bE
        w//T0tH/y8nI/8bEw//IxsX/1dPS/8jGxf/GxMP/xsTD/8bEw//GxMP/xsTD/8bEw//Mysn/mZWT/2tl
        YtRtZ2QhbWdkAAAAAABtZ2QAbWdkAG1nZH5tZ2T/amRh/6GdnP+0sa//sK2r/5CLif91cG3/dnFu/3Zx
        bv92cW7/dnFu/3Vwbf92cW7/dnFu/3Zxbv91cG3/dnFu/3Zxbv92cW7/dnFu/3Zxbv91cG3/dG9s/5mV
        k/+6t7b/bGZj/21nZH5tZ2QAbWdkAG1nZABtZ2QZbWdk021nZP9qZGH/op6c/9rY2P/Jx8b/xMHA/7+8
        u/+/vLv/v7y7/7+8u/+/vLv/vru6/727uf+9u7n/vbu5/767uf+/vLv/v7y7/7+8u/+/vLv/uLW0/4aB
        fv+yr63/0c7O/767uv9sZmP/bWdk021nZBltZ2QAbWdkAG1nZFFtZ2T6bWdk/2pkYf+inpz/u7i3/4eC
        gP+KhYP/ioWD/4qFg/+KhYP/iYSB/4iDgP+hnZz/zszL/9DOzf/Rz87/r6yq/4qFg/+JhIH/ioWC/4qF
        g/+HgoD/dXBt/4R/fP+no6L/u7m3/2xmY/9tZ2T6bWdkUW1nZABtZ2QAbWdkjG1nZP9tZ2T/amRh/6Ke
        nf+ppqT/aWJf/2tlYv9rZWL/a2Vi/2xmY/+Dfnz/gn16/7m2tP+/vbz/tLGw/7SxsP/Jx8b/dnFu/4N+
        e/9zbWr/amRh/2tlYv9sZmP/aWNg/4+KiP+6t7b/bGZj/21nZP9tZ2SMbWdkAG1nZAhtZ2S3bWdk/21n
        ZP9qZGH/op6d/6unpf9rZGH/bWdk/21nZP9wamf/q6im/8rHxv+VkY//vbu5/7Wysf+6t7b/qqel/8bD
        wv+rp6b/6unp/5eTkP9rZWL/bWdk/21nZP9rZWL/kYyK/7q3tv9sZmP/bWdk/21nZLdtZ2QIbWdkFW1n
        ZM9tZ2T/bWdk/2tlYv+VkY//m5eV/2tlYv9tZ2T/a2Vi/5+bmf/Bvr3/eHJv/21mY/++u7r/n5uZ/7Gu
        rP+ZlZP/xMLB/5uXlf/V09L/zcvK/5CMif9sZWL/bWdk/2tlYv+RjIr/ure2/2xmY/9tZ2T/bWdkz21n
        ZBVtZ2QebWdk2W1nZP9tZ2T/a2Vi/5KOi/+Yk5H/a2Vi/2tlYv9wamf/xMHA/4iDgf9rZWL/bmhl/7y5
        t//Kx8b/2NbV/87My//IxsX/enVy/3RubP+Oiof/xsTD/3Ntav9rZWL/a2Vi/5GMiv+6t7b/bGZj/21n
        ZP9tZ2TZbWdkHm1nZB5tZ2TZbWdk/21nZP9rZWL/k46M/5mUkv9rZWL/kIuJ/7y5uP/X1dX/eXNw/2xm
        Y/9tZ2T/i4aD/5GNiv+9urn/oZ6c/8bEw/95c3H/bGZj/29pZv/JxsX/w8C//5OOjP9sZmP/kIyK/7q3
        tv9sZmP/bWdk/21nZNltZ2QebWdkFW1nZM9tZ2T/bWdk/2tlYv+UkI7/mZSS/5KNi//KyMf/m5eV/8rH
        xv+LhoT/amRg/21nY/+npKL/gHt5/2pkYf92cG3/xsTD/3l0cf9sZmP/b2lm/8TCwf+rqKb/x8XE/5iU
        kv+Pioj/ure2/2xmY/9tZ2T/bWdkz21nZBVtZ2QIbWdkt21nZP9tZ2T/amRh/6KenP+sqaf/vbq5/5GM
        iv9oYV7/mZWT/8TCwP+empn/hoF//7+8u/+alZP/fXd1/4iDgf/KyMf/eHNw/2ljYP+KhYP/x8XE/3Js
        af+HgoD/xMHA/5eSkP+6t7X/bGZj/21nZP9tZ2S3bWdkCG1nZABtZ2SMbWdk/21nZP9qZGH/op6c/7Gu
        rf/Dwb//fXd1/2xmY/9vaWb/paGf/+/u7v/DwL//xcPC/9LRz//EwsD/ysjG/9jW1f9+eXb/lpKP/8vJ
        yP+UkI7/a2Vi/3Jsaf/CwL//paKg/7m2tP9sZmP/bWdk/21nZIxtZ2QAbWdkAG1nZFFtZ2T6bWdk/2pk
        Yf+inpz/sa6s/8PAv/+Dfnv/bGZj/2xmY/9zbWr/tbGw/5KNi//EwsH/zcvK/767uv/EwsH/1tTT/5WQ
        jv+6t7b/jYiG/21nZP9tZ2T/b2pn/8C+vP+rqKb/uba0/2xmY/9tZ2T6bWdkUW1nZABtZ2QAbWdkGm1n
        ZNNtZ2T/a2Vi/4yHhf/Ny8r/4N7e/6unpf9rZWL/bWdk/21nZP9tZ2T/a2Vi/767uf/KyMf/t7Sy/8C9
        vP/R0M//dnFu/21nZP9rZWL/bWdk/2xmY/94cnD/2NbV/9TS0f+inpz/bGVi/21nZNNtZ2QabWdkAG1n
        ZABtZ2QAbWdkfm1nZP9tZ2T/bmhl/354dv+OiYf/ycfG/5yYlv9wamf/a2Vi/2xmY/9sZmP/hYB9/7Ku
        rP+0sK//tLCv/5OOjP9tZ2T/bWdk/21nZP9tZ2T/a2Rh/6Ognv+9urn/gXx6/3BqZ/9tZ2T/bWdkfm1n
        ZABtZ2QAAAAAAG1nZABtZ2QhbWdk1G1nZP9tZ2T/bGZj/2tkYf+Dfnv/wb69/8TBwP+zsK7/hYB9/2xm
        Y/9sZmP/a2Vi/2xlYv9sZWL/a2Rh/2tkYf9rZGH/amRh/25oZf+YlJL/y8jH/396d/9rZGH/bWdk/21n
        ZNRtZ2QhbWdkAAAAAAAAAAAAbWdkAG1nZABtZ2RfbWdk9W1nZP9tZ2T/bWdk/2xmY/9xa2j/iIOB/6qm
        pf/GxMP/dnBu/2tlYv9tZ2T/bWdk/2tkYf9/eXf/pqOh/52Zl/+inpz/vru6/8TCwf+GgX7/bGZj/21n
        ZP9tZ2T1bWdkXm1nZABtZ2QAAAAAAAAAAAAAAAAAbWdkAG1nZAdtZ2SNbWdk/W1nZP9tZ2T/bWdk/21n
        ZP9rZWL/bWdk/62pp//CwL7/iYSB/3VvbP93cW7/k4+N/8nHxv+0sa//sK2r/62qqP+UkI7/dG5r/2xm
        Y/9tZ2T/bWdk/W1nZI1tZ2QHbWdkAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWdkAG1nZBBtZ2SdbWdk/W1n
        ZP9tZ2T/bWdk/21nZP9tZ2T/b2pn/5yYlv/FwsH/x8TD/8fFxP/Avbz/j4qI/2xmYv9rZWL/a2Vi/2tl
        Yv9tZ2T/bWdk/21nZP1tZ2SdbWdkEG1nZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsZ2MAbWdkAG1n
        ZBBtZ2SNbWdk9W1nZP9tZ2T/bWdk/21nZP9tZ2T/a2Vi/3Jsaf98d3T/enVy/29pZv9rZWL/bWdk/21n
        ZP9tZ2T/bWdk/21nZP9tZ2T1bWdkjW1nZBBtZ2QAbGZjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAbWdkAG1nZAdtZ2RdbWdk1G1nZP5tZ2T/bWdk/21nZP9tZ2T/bWdk/2xmY/9sZmP/bWdk/21n
        ZP9tZ2T/bWdk/21nZP9tZ2T+bWdk1W1nZF1tZ2QHbWdkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAbWdkAG1nZABtZ2QgbWdkfm1nZNRtZ2T6bWdk/21nZP9tZ2T/bWdk/21n
        ZP9tZ2T/bWdk/21nZP9tZ2T6bWdk1G1nZH5tZ2QgbWhlAG1nZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1nZABtZ2QBbWdkGW1nZFFtZ2SNbWdkt21n
        ZNBtZ2TabWdk2m1nZNBtZ2S4bWdkjW1nZFFtZ2QZbWdkAW1nZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWdkAG1n
        ZABtZ2QIbWdkFm1nZB5tZ2QebWdkFm1nZAhtZ2QAbWdkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf//+AAf//AAD//AAAP/gAAB/wAAAP4AAAB+AAAAfAAAADwAAAA4AA
        AAGAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAAcAAAAPAAAAD4AAAB+AA
        AAfwAAAP+AAAH/wAAD//AAD//4AB///4H/8=
</value>
  </data>
</root>